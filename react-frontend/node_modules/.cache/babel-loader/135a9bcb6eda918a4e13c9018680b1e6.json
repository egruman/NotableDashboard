{"ast":null,"code":"import _assertThisInitialized from\"D:\\\\Users\\\\Ethan\\\\Documents\\\\hackathons\\\\NotableDashboard\\\\react-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _classCallCheck from\"D:\\\\Users\\\\Ethan\\\\Documents\\\\hackathons\\\\NotableDashboard\\\\react-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\Users\\\\Ethan\\\\Documents\\\\hackathons\\\\NotableDashboard\\\\react-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"D:\\\\Users\\\\Ethan\\\\Documents\\\\hackathons\\\\NotableDashboard\\\\react-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"D:\\\\Users\\\\Ethan\\\\Documents\\\\hackathons\\\\NotableDashboard\\\\react-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"D:\\\\Users\\\\Ethan\\\\Documents\\\\hackathons\\\\NotableDashboard\\\\react-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import logo from\"./logo.svg\";import'./App.css';function fetchWith(name,mtd,params){if(mtd==='POST'||mtd==='DELETE'){return fetch(name,{method:mtd,headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify(params)}).then(function(res){return res.json();});}return fetch(name,{method:mtd}).then(function(res){return res.json();});}var InputBox=/*#__PURE__*/function(_Component){_inherits(InputBox,_Component);function InputBox(props){var _this;_classCallCheck(this,InputBox);_this=_possibleConstructorReturn(this,_getPrototypeOf(InputBox).call(this,props));_this.state={fname:\"\",lname:\"\",time:\"\",kind:\"\"};return _this;}_createClass(InputBox,[{key:\"render\",value:function render(){var _this2=this;return React.createElement(\"div\",null,React.createElement(\"form\",{onSubmit:function onSubmit(event){return _this2.props.addAppt(_this2,event);}},\" \",React.createElement(\"label\",null,\" Patient name: \",\" \",React.createElement(\"input\",{type:\"text\",value:this.state.fname,name:\"First Name\",onChange:function onChange(event){return _this2.setState({fname:event.target.value});},placeholder:\"First Name\"}),React.createElement(\"input\",{type:\"text\",value:this.state.lname,name:\"Last Name\",onChange:function onChange(event){return _this2.setState({lname:event.target.value});},placeholder:\"Last Name\"}),React.createElement(\"input\",{type:\"text\",value:this.state.time,name:\"Time\",onChange:function onChange(event){return _this2.setState({time:event.target.value});},placeholder:\"Time\"}),React.createElement(\"input\",{type:\"text\",value:this.state.kind,name:\"Kind\",onChange:function onChange(event){return _this2.setState({kind:event.target.value});},placeholder:\"Kind\"}),React.createElement(\"input\",{type:\"submit\",name:\"Kind\",value:\"Enter\"}))));}}]);return InputBox;}(Component);//the dashboard application\nvar App=/*#__PURE__*/function(_Component2){_inherits(App,_Component2);function App(props){var _this3;_classCallCheck(this,App);_this3=_possibleConstructorReturn(this,_getPrototypeOf(App).call(this,props));_this3.state={doctorData:{},viewDoctor:\"\",viewDate:\"\",dateTxt:\"\",newApptID:0};_this3.addAppt=_this3.addAppt.bind(_assertThisInitialized(_this3));return _this3;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var _this4=this;this.setState({welcomeMessage:\"loading...\"});fetchWith('/get-data','GET',{}).then(function(data){return _this4.setState({doctorData:data.doctors});});}},{key:\"addAppt\",value:function addAppt(comp,event){event.preventDefault();var appt=comp.state;var apptID=this.state.newApptID;var dr=this.state.viewDoctor;var date=this.state.viewDate;this.setState(function(prev){if(!(date in prev.doctorData[dr].appts)){prev.doctorData[dr].appts[date]={};}prev.doctorData[dr].appts[date][apptID]=appt;return{doctorData:prev.doctors,newApptID:prev.newApptID+1};});fetchWith('/add-appt','POST',{apptID:apptID,ID:dr,date:date,appt:appt}).then(function(res){return comp.setState({fname:\"\",lname:\"\",time:\"\",kind:\"\"});});}},{key:\"render\",value:function render(){var doctorList=Object.entries(this.state.doctorData);var app=this;var DoctorDisplay=\"\";var doc=null,scheds;if(app.state.viewDoctor in app.state.doctorData){var doc=app.state.doctorData[app.state.viewDoctor];var schedDisplay=\"\";if(app.state.viewDate!=\"\"){var schedTableDisplay=\"\";if(app.state.viewDate in doc.appts){scheds=Object.entries(doc.appts[app.state.viewDate]);schedTableDisplay=React.createElement(\"div\",null,scheds.map(function(item){return React.createElement(\"p\",{eventKey:item[0]},\" Name; \",item[1].fname,\" \",item[1].lname,\"   | Time \",item[1].time,\"   | Kind: \",item[1].kind,\"  \",React.createElement(\"a\",null,\" Remove\"));}));}schedDisplay=React.createElement(\"div\",null,React.createElement(InputBox,{addAppt:app.addAppt}));}DoctorDisplay=React.createElement(\"div\",null,React.createElement(\"h2\",null,\"Dr. \",doc.fname,\" \",doc.lname),React.createElement(\"h3\",null,doc.email),React.createElement(\"form\",{onSubmit:function onSubmit(event){event.preventDefault();app.setState(function(prev){return{viewDate:prev.dateTxt};});}},React.createElement(\"label\",null,\" Date: \",\" \",React.createElement(\"input\",{type:\"text\",value:app.state.value,name:\"date\",onChange:function onChange(event){return app.setState({dateTxt:event.target.value});},placeholder:\"enter date\"}))),schedDisplay);}return React.createElement(\"div\",null,React.createElement(\"ul\",null,doctorList.map(function(item){var selected=\"\";if(item[0]==app.state.viewDoctor){selected='(X)';}return React.createElement(\"li\",{eventKey:item[0]},\" \",React.createElement(\"a\",{onClick:function onClick(event){return app.setState({viewDoctor:item[0]});}},item[1].lname,\", \",item[1].fname,\" \"),\" \",selected,\" \");})),React.createElement(\"div\",{class:\"App\"},React.createElement(\"h1\",null,window.token),DoctorDisplay));}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["D:/Users/Ethan/Documents/hackathons/NotableDashboard/react-frontend/src/App.js"],"names":["React","Component","fetchWith","name","mtd","params","fetch","method","headers","body","JSON","stringify","then","res","json","InputBox","props","state","fname","lname","time","kind","event","addAppt","setState","target","value","App","doctorData","viewDoctor","viewDate","dateTxt","newApptID","bind","welcomeMessage","data","doctors","comp","preventDefault","appt","apptID","dr","date","prev","appts","ID","doctorList","Object","entries","app","DoctorDisplay","doc","scheds","schedDisplay","schedTableDisplay","map","item","email","selected","window","token"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction fetchWith(name, mtd, params){\n  if(mtd === 'POST' || mtd === 'DELETE') {\n    return fetch(name, {method: mtd, \n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(params)})\n      .then(res => res.json());\n    }\n    return fetch(name, {method: mtd})\n      .then(res => res.json());\n}\n\nclass InputBox extends Component{\n  constructor(props){\n    super(props);\n    this.state={fname : \"\", lname : \"\", time: \"\", kind: \"\"};\n  }\n\n  render(){\n    return (<div><form onSubmit={event => \n      this.props.addAppt(this, event)}> <label> Patient name: {\" \"} \n      <input type=\"text\" value={this.state.fname} name=\"First Name\"\n          onChange={event => this.setState({fname : event.target.value})} \n          placeholder=\"First Name\"/> \n      <input type=\"text\" value={this.state.lname} name=\"Last Name\"\n          onChange={event => this.setState({lname : event.target.value})} \n          placeholder=\"Last Name\"/> \n      <input type=\"text\" value={this.state.time} name=\"Time\"\n          onChange={event => this.setState({time : event.target.value})} \n          placeholder=\"Time\"/>\n      <input type=\"text\" value={this.state.kind} name=\"Kind\"\n          onChange={event => this.setState({kind : event.target.value})} \n          placeholder=\"Kind\"/> \n      <input type=\"submit\" name=\"Kind\" value=\"Enter\"/> \n      </label>\n      </form></div>)\n  }\n}\n\n//the dashboard application\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state={doctorData : {},\n                viewDoctor: \"\",\n                viewDate: \"\",\n                dateTxt: \"\",\n                newApptID: 0};\n    this.addAppt=this.addAppt.bind(this);\n  }\n\n  componentDidMount(){\n    this.setState({welcomeMessage : \"loading...\"});\n    fetchWith('/get-data', 'GET', {})\n    .then(data => this.setState({doctorData : data.doctors}));\n  }\n\n  addAppt(comp, event){\n    event.preventDefault();\n    var appt = comp.state;\n    var apptID = this.state.newApptID;\n    var dr = this.state.viewDoctor;\n    var date = this.state.viewDate;\n    this.setState(function(prev){\n      if(!(date in prev.doctorData[dr].appts)){\n        prev.doctorData[dr].appts[date] = {};\n      }\n      prev.doctorData[dr].appts[date][apptID] = appt;\n      return {doctorData : prev.doctors, newApptID : prev.newApptID + 1}})\n    fetchWith('/add-appt', 'POST', {apptID: apptID, ID: dr, date: date, appt: appt})\n    .then(res => comp.setState({fname : \"\", lname : \"\", time: \"\", kind: \"\"}));\n  }\n\n  render() {\n    var doctorList = Object.entries(this.state.doctorData);\n    var app = this;\n    var DoctorDisplay = \"\";\n    var doc = null, scheds;\n    if(app.state.viewDoctor in app.state.doctorData){\n      var doc = app.state.doctorData[app.state.viewDoctor];\n      var schedDisplay = \"\";\n      if(app.state.viewDate != \"\"){\n        var schedTableDisplay = \"\";\n        if(app.state.viewDate in doc.appts){\n          scheds = Object.entries(doc.appts[app.state.viewDate]);\n          schedTableDisplay = (<div>{scheds.map(item => \n            <p eventKey = {item[0]} > Name; {item[1].fname} {item[1].lname}   |     \n            Time {item[1].time}   | Kind: {item[1].kind}  <a> Remove</a></p>)}</div>);\n        }\n        schedDisplay = (<div>\n            <InputBox addAppt={app.addAppt} /></div>);\n      }\n      DoctorDisplay = (<div>\n        <h2>Dr. {doc.fname} {doc.lname}</h2>\n        <h3>{doc.email}</h3>\n        <form onSubmit={function(event){\n      event.preventDefault();\n      app.setState(function(prev){return {viewDate : prev.dateTxt};});}}> \n      <label> Date: {\" \"} \n      <input type=\"text\" value={app.state.value} name=\"date\"\n          onChange={event => app.setState({dateTxt: event.target.value})} placeholder=\"enter date\"/> \n      </label>\n      </form>\n        {schedDisplay}</div>)\n    }\n    return (<div>\n      <ul>{doctorList.map(function(item){\n          var selected = \"\"\n          if(item[0] == app.state.viewDoctor){\n            selected = '(X)'\n          }\n          return (<li eventKey = {item[0]}> <a onClick={(event)=>\n          app.setState({viewDoctor : item[0]})}>\n              {item[1].lname}, {item[1].fname} </a> {selected} </li>)})}</ul>\n      <div class=\"App\">\n        <h1>{window.token}</h1>\n        {DoctorDisplay}\n        </div></div>\n  );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}